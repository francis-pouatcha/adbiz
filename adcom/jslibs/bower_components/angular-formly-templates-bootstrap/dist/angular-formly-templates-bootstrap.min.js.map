{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///angular-formly-templates-bootstrap.min.js","webpack:///webpack/bootstrap fe4c5ad75b4415dd2d14","webpack:///./index.js","webpack:///./angular-fix/index.js","webpack:///./index.common.js","webpack:///./run/addons.js","webpack:///./run/description.js","webpack:///./run/index.js","webpack:///./types/checkbox.js","webpack:///./types/index.js","webpack:///./types/input.js","webpack:///./types/multiCheckbox.js","webpack:///./types/radio.js","webpack:///./types/select.js","webpack:///./types/textarea.js","webpack:///./wrappers/index.js","webpack:///./run/addons.html","webpack:///./types/checkbox.html","webpack:///./types/multiCheckbox.html","webpack:///./types/radio.html","webpack:///./types/select.html","webpack:///./wrappers/has-error.html","webpack:///./wrappers/label.html","webpack:///external \"angular\"","webpack:///external {\"root\":\"apiCheck\",\"amd\":\"api-check\",\"commonjs2\":\"api-check\",\"commonjs\":\"api-check\"}","webpack:///external {\"root\":\"ngFormly\",\"amd\":\"angular-formly\",\"commonjs2\":\"angular-formly\",\"commonjs\":\"angular-formly\"}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_21__","__WEBPACK_EXTERNAL_MODULE_22__","__WEBPACK_EXTERNAL_MODULE_23__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","angular","version","window","Object","defineProperty","value","ngModuleName","ngModule","constant","output","prefix","addAddonsManipulator","formlyConfig","formlyBootstrapApiCheck","addonTemplate","addonChecker","shape","class","string","optional","text","strict","api","templateOptions","addonLeft","addonRight","templateManipulators","preWrapper","push","template","options","type","warn","replace","run","$inject","addDescriptionManipulator","scope","isDefined","description","el","document","createElement","appendChild","element","modelEls","querySelectorAll","attr","innerHTML","_interopRequireDefault","obj","__esModule","default","_addons","_addons2","_description","_description2","addCheckboxType","formlyConfigProvider","setType","name","wrapper","apiCheck","label","apiCheckInstance","config","addInputType","defaultOptions","noFormControl","arrayOf","object","labelProp","valueProp","controller","$scope","setModel","model","opts","key","forEach","multiCheckbox","checked","checkbox","index","to","change","modelValue","isArray","v","indexOf","addRadioType","_defineProperty","enumerable","configurable","writable","addSelectType","ngOptions","ngModelAttrs","groupProp","addTextareaType","rows","attribute","cols","number","addWrappers","setWrapper","required","bool"],"mappings":";;CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,EAAAG,QAAA,WAAAA,QAAA,aAAAA,QAAA,mBACA,kBAAAC,gBAAAC,IACAD,QAAA,wCAAAJ,GACA,gBAAAC,SACAA,QAAA,2BAAAD,EAAAG,QAAA,WAAAA,QAAA,aAAAA,QAAA,mBAEAJ,EAAA,2BAAAC,EAAAD,EAAA,QAAAA,EAAA,SAAAA,EAAA,WACCO,KAAA,SAAAC,EAAAC,EAAAC,GACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAX,OAGA,IAAAC,GAAAW,EAAAD,IACAX,WACAa,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAd,EAAAD,QAAAC,IAAAD,QAAAU,GAGAT,EAAAa,QAAA,EAGAb,EAAAD,QAvBA,GAAAY,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAAST,EAAQD,EAASU,GAE/B,YExDDT,GAAOD,QAAUU,EAAQ,IF8DnB,SAAST,EAAQD,EAASU,GAI/B,YGhED,IAAIS,GAAUT,EAAQ,GACjBS,GAAQC,UACXD,EAAUE,OAAOF,SAEnBlB,EAAOD,QAAUmB,GHsEX,SAASlB,EAAQD,EAASU,GAE/B,YAEAY,QAAOC,eAAevB,EAAS,cAC7BwB,OAAO,GIjFV,IAAMC,GAAe,kBACfN,EAAUT,EAAQ,GAClBgB,EAAWP,EAAQlB,OAAOwB,GAAef,EAAQ,KACvDgB,GAASC,SACP,0BACAjB,EAAQ,KACNkB,QACEC,OAAQ,+BAIdH,EAASC,SAAS,yBAA0B,UAE5CjB,EAAQ,IAAcgB,GACtBhB,EAAQ,GAAWgB,GACnBhB,EAAQ,GAASgB,GJkFhB1B,EAAQ,WIhFMyB,EJiFdxB,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,EAASU,GAE/B,YAEAY,QAAOC,eAAevB,EAAS,cAC7BwB,OAAO,IAGTxB,EAAQ,WK9GM,SAAA0B,GAGb,QAASI,GAAqBC,EAAcC,GAC1C,GAAIC,GAAgBvB,EAAQ,IACtBwB,EAAeF,EAAwBG,OAC3CC,QAAOJ,EAAwBK,OAAOC,SACtCC,KAAMP,EAAwBK,OAAOC,WACpCE,OAAOF,SACJG,EAAMT,EAAwBG,OAClCO,gBAAiBV,EAAwBG,OACvCQ,UAAWT,EACXU,WAAYV,KAGhBH,GAAac,qBAAqBC,WAAWC,KAAK,SAASC,EAAUC,GACnE,MAAqB,UAAjBA,EAAQC,OAAsBD,EAAQP,gBAAgBC,YAAcM,EAAQP,gBAAgBE,WACvFI,GAEThB,EAAwBmB,MAAMV,IAAOQ,IAC9BhB,EAAcmB,QAAQ,0CAA2CJ,MAnB5EtB,EAAS2B,IAAIvB,GAsBdA,EAAAwB,SAAA,2CLiHArD,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,EAASU,GAE/B,YAEAY,QAAOC,eAAevB,EAAS,cAC7BwB,OAAO,IAGTxB,EAAQ,WMpJM,SAAA0B,GAGb,QAAS6B,GAA0BxB,GACjCA,EAAac,qBAAqBC,WAAWC,KAAK,SAAyBC,EAAUC,EAASO,GAC5F,GAAIrC,QAAQsC,UAAUR,EAAQP,gBAAgBgB,aAAc,CAC1D,GAAIC,GAAKC,SAASC,cAAc,MAChCF,GAAGG,YAAY3C,QAAQ4C,QAAQf,GAAU,IACzCW,EAAGG,YAAY3C,QAAQ4C,QACrB,UAAYP,EAAM3C,GAAK,gFAKvB,GACF,IAAImD,GAAW7C,QAAQ4C,QAAQJ,EAAGM,iBAAiB,cAInD,OAHID,IACFA,EAASE,KAAK,mBAAoBV,EAAM3C,GAAK,gBAExC8C,EAAGQ,UAEV,MAAOnB,KApBbtB,EAAS2B,IAAIE,GAwBdA,EAAAD,SAAA,iBNiJArD,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,EAASU,GAE/B,YAMA,SAAS0D,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAJzF/C,OAAOC,eAAevB,EAAS,cAC7BwB,OAAO,GAKT,IAAIgD,GAAU9D,EOxLI,GP0Ld+D,EAAWL,EAAuBI,GAElCE,EAAehE,EO3LI,GP6LnBiE,EAAgBP,EAAuBM,EAE3C1E,GAAQ,WO7LM,SAAA0B,GACb+C,EAAA,WAAO/C,GACPiD,EAAA,WAAYjD,IPgMbzB,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,EAASU,GAE/B,YAEAY,QAAOC,eAAevB,EAAS,cAC7BwB,OAAO,IAGTxB,EAAQ,WQjNM,SAAA0B,GAGb,QAASkD,GAAgBC,EAAsB7C,GAC7C,GAAMf,GAAIe,CACV6C,GAAqBC,SACnBC,KAAM,WACN/B,SAAUtC,EAAQ,IAClBsE,SAAU,qBACVC,UACEvC,gBAAiBzB,EAAEkB,OACjB+C,MAAOjE,EAAEoB,UAGb8C,iBAAkBlE,IAbtBS,EAAS0D,OAAOR,GAgBjBA,EAAAtB,SAAA,mDRoNArD,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,EAASU,GAE/B,YAEAY,QAAOC,eAAevB,EAAS,cAC7BwB,OAAO,IAGTxB,EAAQ,WSjPM,SAAA0B,GACbhB,EAAQ,GAAcgB,GACtBhB,EAAQ,GAAmBgB,GAC3BhB,EAAQ,GAAWgB,GACnBhB,EAAQ,IAAWgB,GACnBhB,EAAQ,IAAYgB,GACpBhB,EAAQ,IAAcgB,IToPvBzB,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,EAASU,GAE/B,YAEAY,QAAOC,eAAevB,EAAS,cAC7BwB,OAAO,IAGTxB,EAAQ,WUtQM,SAAA0B,GAGb,QAAS2D,GAAaR,GACpBA,EAAqBC,SACnBC,KAAM,QACN/B,SAAU,6DACVgC,SAAU,iBAAkB,uBANhCtD,EAAS0D,OAAOC,GASjBA,EAAA/B,SAAA,yBVyQArD,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,EAASU,GAE/B,YAEAY,QAAOC,eAAevB,EAAS,cAC7BwB,OAAO,IAGTxB,EAAQ,WW/RM,SAAA0B,GAGb,QAASkD,GAAgBC,EAAsB7C,GAC7C,GAAMf,GAAIe,CACV6C,GAAqBC,SACnBC,KAAM,gBACN/B,SAAUtC,EAAQ,IAClBsE,SAAU,iBAAkB,qBAC5BM,gBACEC,eAAe,GAEjBN,UACEvC,gBAAiBzB,EAAEkB,OACjBc,QAAShC,EAAEuE,QAAQvE,EAAEwE,QACrBC,UAAWzE,EAAEoB,OAAOC,SACpBqD,UAAW1E,EAAEoB,OAAOC,YAGxB6C,iBAAkBlE,EAClB2E,YAA4B,kBAAiBC,GAiB3C,QAASC,KACPD,EAAOE,MAAMC,EAAKC,QAClB9E,QAAQ+E,QAAQL,EAAOM,cAAcC,QAAS,SAACC,EAAUC,GACnDD,GACFR,EAAOE,MAAMC,EAAKC,KAAKlD,KAAKwD,EAAGtD,QAAQqD,GAAOC,EAAGZ,WAAa,YApBpE,GAAMY,GAAKV,EAAOU,GACZP,EAAOH,EAAO5C,OACpB4C,GAAOM,eACLC,WACAI,OAAQV,EAIV,IAAMW,GAAaZ,EAAOE,MAAMC,EAAKC,IACjC9E,SAAQuF,QAAQD,KXgSjB,WW/RD,GAAMd,GAAYY,EAAGZ,WAAa,OAClCxE,SAAQ+E,QAAQK,EAAGtD,QAAS,SAAS0D,EAAGL,GACtCT,EAAOM,cAAcC,QAAQE,GAA8C,KAArCG,EAAWG,QAAQD,EAAEhB,aAhCrEjE,EAAS0D,OAAOR,GA+CjBA,EAAAtB,SAAA,mDXoSArD,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,EAASU,GAE/B,YAEAY,QAAOC,eAAevB,EAAS,cAC7BwB,OAAO,IAGTxB,EAAQ,WYhWM,SAAA0B,GAGb,QAASmF,GAAahC,EAAsB7C,GAC1C,GAAMf,GAAIe,CACV6C,GAAqBC,SACnBC,KAAM,QACN/B,SAAUtC,EAAQ,IAClBsE,SAAU,iBAAkB,qBAC5BM,gBACEC,eAAe,GAEjBN,UACEvC,gBAAiBzB,EAAEkB,OACjBc,QAAShC,EAAEuE,QAAQvE,EAAEwE,QACrBC,UAAWzE,EAAEoB,OAAOC,SACpBqD,UAAW1E,EAAEoB,OAAOC,YAGxB6C,iBAAkBlE,IAlBtBS,EAAS0D,OAAOyB,GAqBjBA,EAAAvD,SAAA,mDZmWArD,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,EAASU,GAE/B,YAMA,SAASoG,GAAgBzC,EAAK4B,EAAKzE,GAAS,MAAOF,QAAOC,eAAe8C,EAAK4B,GAAOzE,MAAOA,EAAOuF,YAAY,EAAMC,cAAc,EAAMC,UAAU,IAJnJ3F,OAAOC,eAAevB,EAAS,cAC7BwB,OAAO,IAKTxB,EAAQ,WavYO,SAAA0B,GAGd,QAASwF,GAAcrC,EAAsB7C,GAC3C,GAAMf,GAAIe,CACV6C,GAAqBC,SACnBC,KAAM,SACN/B,SAAUtC,EAAQ,IAClBsE,SAAU,iBAAkB,qBAC5BM,eAAc,SAACrC,GACb,MAAIA,GAAQP,gBAAgByE,WAExBC,aAAYN,KACT7D,EAAQP,gBAAgByE,WACvB3F,MAAO,gBAJf,QAUFyD,UACEvC,gBAAiBzB,EAAEkB,OACjBc,QAAShC,EAAEuE,QAAQvE,EAAEwE,QACrBC,UAAWzE,EAAEoB,OAAOC,SACpBqD,UAAW1E,EAAEoB,OAAOC,SACpB+E,UAAWpG,EAAEoB,OAAOC,YAGxB6C,iBAAkBlE,IA3BtBS,EAAS0D,OAAO8B,GA8BjBA,EAAA5D,SAAA,mDbwYArD,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,EAASU,GAE/B,YAEAY,QAAOC,eAAevB,EAAS,cAC7BwB,OAAO,IAGTxB,EAAQ,WcnbO,SAAA0B,GAGd,QAAS4F,GAAgBzC,EAAsB7C,GAC7C,GAAMf,GAAIe,CACV6C,GAAqBC,SACnBC,KAAM,WACN/B,SAAU,2EACVgC,SAAU,iBAAkB,qBAC5BM,gBACE8B,cACEG,MAAOC,UAAW,QAClBC,MAAOD,UAAW,UAGtBvC,UACEvC,gBAAiBzB,EAAEkB,OACjBoF,KAAMtG,EAAEyG,OAAOpF,SACfmF,KAAMxG,EAAEyG,OAAOpF,YAGnB6C,iBAAkBlE,IApBtBS,EAAS0D,OAAOkC,GAuBjBA,EAAAhE,SAAA,mDdsbArD,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,EAASU,GAE/B,YAEAY,QAAOC,eAAevB,EAAS,cAC7BwB,OAAO,IAGTxB,EAAQ,We1dM,SAAA0B,GAGb,QAASiG,GAAY9C,EAAsB7C,GACzC,GAAMf,GAAIe,CACV6C,GAAqB+C,aAEjB7C,KAAM,iBACN/B,SAAUtC,EAAQ,IAClBuE,UACEvC,gBAAiBzB,EAAEkB,OACjB+C,MAAOjE,EAAEoB,OACTwF,SAAU5G,EAAE6G,KAAKxF,YAGrB6C,iBAAkBlE,IAEnB8D,KAAM,oBAAqB/B,SAAUtC,EAAQ,OAhBlDgB,EAAS0D,OAAOuC,GAmBjBA,EAAArE,SAAA,mDf0dArD,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,EAASU,GgBlfhCT,EAAAD,QAAA,6iBhBwfM,SAASC,EAAQD,EAASU,GiBxfhCT,EAAAD,QAAA,wNjB8fM,SAASC,EAAQD,EAASU,GkB9fhCT,EAAAD,QAAA,2WlBogBM,SAASC,EAAQD,EAASU,GmBpgBhCT,EAAAD,QAAA,+XnB0gBM,SAASC,EAAQD,EAASU,GoB1gBhCT,EAAAD,QAAA,qPpBghBM,SAASC,EAAQD,EAASU,GqBhhBhCT,EAAAD,QAAA,uHrBshBM,SAASC,EAAQD,EAASU,GsBthBhCT,EAAAD,QAAA,8KtB4hBM,SAASC,EAAQD,EAASU,GuB5hBhCT,EAAAD,QAAAM,GvBkiBM,SAASL,EAAQD,EAASU,GwBliBhCT,EAAAD,QAAAO,GxBwiBM,SAASN,EAAQD,EAASU,GyBxiBhCT,EAAAD,QAAAQ","file":"angular-formly-templates-bootstrap.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"api-check\"), require(\"angular-formly\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"api-check\", \"angular-formly\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngFormlyTemplatesBootstrap\"] = factory(require(\"angular\"), require(\"api-check\"), require(\"angular-formly\"));\n\telse\n\t\troot[\"ngFormlyTemplatesBootstrap\"] = factory(root[\"angular\"], root[\"apiCheck\"], root[\"ngFormly\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_23__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"api-check\"), require(\"angular-formly\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"api-check\", \"angular-formly\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngFormlyTemplatesBootstrap\"] = factory(require(\"angular\"), require(\"api-check\"), require(\"angular-formly\"));\n\telse\n\t\troot[\"ngFormlyTemplatesBootstrap\"] = factory(root[\"angular\"], root[\"apiCheck\"], root[\"ngFormly\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_23__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(2);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// some versions of angular don't export the angular module properly,\n\t// so we get it from window in this case.\n\t'use strict';\n\t\n\tvar angular = __webpack_require__(21);\n\tif (!angular.version) {\n\t  angular = window.angular;\n\t}\n\tmodule.exports = angular;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar ngModuleName = 'formlyBootstrap';\n\tvar angular = __webpack_require__(1);\n\tvar ngModule = angular.module(ngModuleName, [__webpack_require__(23)]);\n\tngModule.constant('formlyBootstrapApiCheck', __webpack_require__(22)({\n\t  output: {\n\t    prefix: 'angular-formly-bootstrap'\n\t  }\n\t}));\n\tngModule.constant('formlyBootstrapVersion', (\"4.0.10\"));\n\t\n\t__webpack_require__(13)(ngModule);\n\t__webpack_require__(7)(ngModule);\n\t__webpack_require__(5)(ngModule);\n\t\n\texports['default'] = ngModuleName;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.run(addAddonsManipulator);\n\t\n\t  function addAddonsManipulator(formlyConfig, formlyBootstrapApiCheck) {\n\t    var addonTemplate = __webpack_require__(14);\n\t    var addonChecker = formlyBootstrapApiCheck.shape({\n\t      'class': formlyBootstrapApiCheck.string.optional,\n\t      text: formlyBootstrapApiCheck.string.optional\n\t    }).strict.optional;\n\t    var api = formlyBootstrapApiCheck.shape({\n\t      templateOptions: formlyBootstrapApiCheck.shape({\n\t        addonLeft: addonChecker,\n\t        addonRight: addonChecker\n\t      })\n\t    });\n\t    formlyConfig.templateManipulators.preWrapper.push(function (template, options) {\n\t      if (options.type !== 'input' || !options.templateOptions.addonLeft && !options.templateOptions.addonRight) {\n\t        return template;\n\t      }\n\t      formlyBootstrapApiCheck.warn([api], [options]);\n\t      return addonTemplate.replace('<formly-transclude></formly-transclude>', template);\n\t    });\n\t  }\n\t  addAddonsManipulator.$inject = [\"formlyConfig\", \"formlyBootstrapApiCheck\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.run(addDescriptionManipulator);\n\t\n\t  function addDescriptionManipulator(formlyConfig) {\n\t    formlyConfig.templateManipulators.preWrapper.push(function ariaDescribedBy(template, options, scope) {\n\t      if (angular.isDefined(options.templateOptions.description)) {\n\t        var el = document.createElement('div');\n\t        el.appendChild(angular.element(template)[0]);\n\t        el.appendChild(angular.element('<p id=\"' + scope.id + '_description\"' + 'class=\"help-block\"' + 'ng-if=\"to.description\">' + '{{to.description}}' + '</p>')[0]);\n\t        var modelEls = angular.element(el.querySelectorAll('[ng-model]'));\n\t        if (modelEls) {\n\t          modelEls.attr('aria-describedby', scope.id + '_description');\n\t        }\n\t        return el.innerHTML;\n\t      } else {\n\t        return template;\n\t      }\n\t    });\n\t  }\n\t  addDescriptionManipulator.$inject = [\"formlyConfig\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _addons = __webpack_require__(3);\n\t\n\tvar _addons2 = _interopRequireDefault(_addons);\n\t\n\tvar _description = __webpack_require__(4);\n\t\n\tvar _description2 = _interopRequireDefault(_description);\n\t\n\texports['default'] = function (ngModule) {\n\t  (0, _addons2['default'])(ngModule);\n\t  (0, _description2['default'])(ngModule);\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addCheckboxType);\n\t\n\t  function addCheckboxType(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setType({\n\t      name: 'checkbox',\n\t      template: __webpack_require__(15),\n\t      wrapper: ['bootstrapHasError'],\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          label: c.string\n\t        })\n\t      },\n\t      apiCheckInstance: c\n\t    });\n\t  }\n\t  addCheckboxType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  __webpack_require__(6)(ngModule);\n\t  __webpack_require__(9)(ngModule);\n\t  __webpack_require__(8)(ngModule);\n\t  __webpack_require__(10)(ngModule);\n\t  __webpack_require__(11)(ngModule);\n\t  __webpack_require__(12)(ngModule);\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addInputType);\n\t\n\t  function addInputType(formlyConfigProvider) {\n\t    formlyConfigProvider.setType({\n\t      name: 'input',\n\t      template: '<input class=\"form-control\" ng-model=\"model[options.key]\">',\n\t      wrapper: ['bootstrapLabel', 'bootstrapHasError']\n\t    });\n\t  }\n\t  addInputType.$inject = [\"formlyConfigProvider\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addCheckboxType);\n\t\n\t  function addCheckboxType(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setType({\n\t      name: 'multiCheckbox',\n\t      template: __webpack_require__(16),\n\t      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n\t      defaultOptions: {\n\t        noFormControl: false\n\t      },\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          options: c.arrayOf(c.object),\n\t          labelProp: c.string.optional,\n\t          valueProp: c.string.optional\n\t        })\n\t      },\n\t      apiCheckInstance: c,\n\t      controller: /* @ngInject */[\"$scope\", function controller($scope) {\n\t        var to = $scope.to;\n\t        var opts = $scope.options;\n\t        $scope.multiCheckbox = {\n\t          checked: [],\n\t          change: setModel\n\t        };\n\t\n\t        // initialize the checkboxes check property\n\t        var modelValue = $scope.model[opts.key];\n\t        if (angular.isArray(modelValue)) {\n\t          (function () {\n\t            var valueProp = to.valueProp || 'value';\n\t            angular.forEach(to.options, function (v, index) {\n\t              $scope.multiCheckbox.checked[index] = modelValue.indexOf(v[valueProp]) !== -1;\n\t            });\n\t          })();\n\t        }\n\t\n\t        function setModel() {\n\t          $scope.model[opts.key] = [];\n\t          angular.forEach($scope.multiCheckbox.checked, function (checkbox, index) {\n\t            if (checkbox) {\n\t              $scope.model[opts.key].push(to.options[index][to.valueProp || 'value']);\n\t            }\n\t          });\n\t        }\n\t      }]\n\t    });\n\t  }\n\t  addCheckboxType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addRadioType);\n\t\n\t  function addRadioType(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setType({\n\t      name: 'radio',\n\t      template: __webpack_require__(17),\n\t      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n\t      defaultOptions: {\n\t        noFormControl: false\n\t      },\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          options: c.arrayOf(c.object),\n\t          labelProp: c.string.optional,\n\t          valueProp: c.string.optional\n\t        })\n\t      },\n\t      apiCheckInstance: c\n\t    });\n\t  }\n\t  addRadioType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _defineProperty(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); }\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addSelectType);\n\t\n\t  function addSelectType(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setType({\n\t      name: 'select',\n\t      template: __webpack_require__(18),\n\t      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n\t      defaultOptions: function defaultOptions(options) {\n\t        if (options.templateOptions.ngOptions) {\n\t          return {\n\t            ngModelAttrs: _defineProperty({}, options.templateOptions.ngOptions, {\n\t              value: 'ng-options'\n\t            })\n\t          };\n\t        }\n\t      },\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          options: c.arrayOf(c.object),\n\t          labelProp: c.string.optional,\n\t          valueProp: c.string.optional,\n\t          groupProp: c.string.optional\n\t        })\n\t      },\n\t      apiCheckInstance: c\n\t    });\n\t  }\n\t  addSelectType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addTextareaType);\n\t\n\t  function addTextareaType(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setType({\n\t      name: 'textarea',\n\t      template: '<textarea class=\"form-control\" ng-model=\"model[options.key]\"></textarea>',\n\t      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n\t      defaultOptions: {\n\t        ngModelAttrs: {\n\t          rows: { attribute: 'rows' },\n\t          cols: { attribute: 'cols' }\n\t        }\n\t      },\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          rows: c.number.optional,\n\t          cols: c.number.optional\n\t        })\n\t      },\n\t      apiCheckInstance: c\n\t    });\n\t  }\n\t  addTextareaType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addWrappers);\n\t\n\t  function addWrappers(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setWrapper([{\n\t      name: 'bootstrapLabel',\n\t      template: __webpack_require__(20),\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          label: c.string,\n\t          required: c.bool.optional\n\t        })\n\t      },\n\t      apiCheckInstance: c\n\t    }, { name: 'bootstrapHasError', template: __webpack_require__(19) }]);\n\t  }\n\t  addWrappers.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div ng-class=\\\"{'input-group': to.addonLeft || to.addonRight}\\\">\\n    <div class=\\\"input-group-addon\\\" ng-if=\\\"to.addonLeft\\\">\\n        <i class=\\\"{{to.addonLeft.class}}\\\" ng-if=\\\"to.addonLeft.class\\\"></i>\\n        <span ng-if=\\\"to.addonLeft.text\\\">{{to.addonLeft.text}}</span>\\n    </div>\\n    <formly-transclude></formly-transclude>\\n    <div class=\\\"input-group-addon\\\" ng-if=\\\"to.addonRight\\\">\\n        <i class=\\\"{{to.addonRight.class}}\\\" ng-if=\\\"to.addonRight.class\\\"></i>\\n        <span ng-if=\\\"to.addonRight.text\\\">{{to.addonRight.text}}</span>\\n    </div>\\n</div>\"\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div class=\\\"checkbox\\\">\\n\\t<label>\\n\\t\\t<input type=\\\"checkbox\\\"\\n           class=\\\"formly-field-checkbox\\\"\\n\\t\\t       ng-model=\\\"model[options.key]\\\">\\n\\t\\t{{to.label}}\\n\\t\\t{{to.required ? '*' : ''}}\\n\\t</label>\\n</div>\\n\"\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div class=\\\"radio-group\\\">\\n  <div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"checkbox\\\">\\n    <label>\\n      <input type=\\\"checkbox\\\"\\n             id=\\\"{{id + '_'+ $index}}\\\"\\n             ng-model=\\\"multiCheckbox.checked[$index]\\\"\\n             ng-change=\\\"multiCheckbox.change()\\\">\\n      {{option[to.labelProp || 'name']}}\\n    </label>\\n  </div>\\n</div>\\n\"\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div class=\\\"radio-group\\\">\\n  <div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"radio\\\">\\n    <label>\\n      <input type=\\\"radio\\\"\\n             id=\\\"{{id + '_'+ $index}}\\\"\\n             tabindex=\\\"0\\\"\\n             ng-value=\\\"option[to.valueProp || 'value']\\\"\\n             ng-model=\\\"model[options.key]\\\">\\n      {{option[to.labelProp || 'name']}}\\n    </label>\\n  </div>\\n</div>\\n\"\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<select class=\\\"form-control\\\"\\n        ng-model=\\\"model[options.key]\\\"\\n        ng-options=\\\"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options\\\">\\n</select>\\n\"\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div class=\\\"form-group\\\" ng-class=\\\"{'has-error': showError}\\\">\\n  <formly-transclude></formly-transclude>\\n</div>\\n\"\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div>\\n  <label for=\\\"{{id}}\\\" class=\\\"control-label\\\">\\n    {{to.label}}\\n    {{to.required ? '*' : ''}}\\n  </label>\\n  <formly-transclude></formly-transclude>\\n</div>\\n\"\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_21__;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_23__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** angular-formly-templates-bootstrap.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fe4c5ad75b4415dd2d14\n **/","module.exports = require('./index.common');\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./index.js\n **/","// some versions of angular don't export the angular module properly,\n// so we get it from window in this case.\nvar angular = require('angular');\nif (!angular.version) {\n  angular = window.angular;\n}\nmodule.exports = angular;\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./angular-fix/index.js\n **/","const ngModuleName = 'formlyBootstrap';\nconst angular = require('./angular-fix');\nconst ngModule = angular.module(ngModuleName, [require('angular-formly')]);\nngModule.constant(\n  'formlyBootstrapApiCheck',\n  require('api-check')({\n    output: {\n      prefix: 'angular-formly-bootstrap'\n    }\n  })\n);\nngModule.constant('formlyBootstrapVersion', VERSION);\n\nrequire('./wrappers')(ngModule);\nrequire('./types')(ngModule);\nrequire('./run')(ngModule);\n\nexport default ngModuleName;\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./index.common.js\n **/","export default ngModule => {\n  ngModule.run(addAddonsManipulator);\n\n  function addAddonsManipulator(formlyConfig, formlyBootstrapApiCheck) {\n    var addonTemplate = require('./addons.html');\n    const addonChecker = formlyBootstrapApiCheck.shape({\n      class: formlyBootstrapApiCheck.string.optional,\n      text: formlyBootstrapApiCheck.string.optional\n    }).strict.optional;\n    const api = formlyBootstrapApiCheck.shape({\n      templateOptions: formlyBootstrapApiCheck.shape({\n        addonLeft: addonChecker,\n        addonRight: addonChecker\n      })\n    });\n    formlyConfig.templateManipulators.preWrapper.push(function(template, options) {\n      if (options.type !== 'input' || (!options.templateOptions.addonLeft && !options.templateOptions.addonRight)) {\n        return template;\n      }\n      formlyBootstrapApiCheck.warn([api], [options]);\n      return addonTemplate.replace('<formly-transclude></formly-transclude>', template);\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./run/addons.js\n **/","export default ngModule => {\n  ngModule.run(addDescriptionManipulator);\n\n  function addDescriptionManipulator(formlyConfig) {\n    formlyConfig.templateManipulators.preWrapper.push(function ariaDescribedBy(template, options, scope) {\n      if (angular.isDefined(options.templateOptions.description)) {\n        var el = document.createElement('div');\n        el.appendChild(angular.element(template)[0]);\n        el.appendChild(angular.element(\n          '<p id=\"' + scope.id + '_description\"' +\n          'class=\"help-block\"' +\n          'ng-if=\"to.description\">' +\n          '{{to.description}}' +\n          '</p>'\n        )[0]);\n        var modelEls = angular.element(el.querySelectorAll('[ng-model]'));\n        if (modelEls) {\n          modelEls.attr('aria-describedby', scope.id + '_description');\n        }\n        return el.innerHTML;\n      } else {\n        return template;\n      }\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./run/description.js\n **/","import addons from './addons';\nimport description from './description';\n\nexport default ngModule => {\n  addons(ngModule);\n  description(ngModule);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./run/index.js\n **/","export default ngModule => {\n  ngModule.config(addCheckboxType);\n\n  function addCheckboxType(formlyConfigProvider, formlyBootstrapApiCheck) {\n    const c = formlyBootstrapApiCheck;\n    formlyConfigProvider.setType({\n      name: 'checkbox',\n      template: require('./checkbox.html'),\n      wrapper: ['bootstrapHasError'],\n      apiCheck: {\n        templateOptions: c.shape({\n          label: c.string\n        })\n      },\n      apiCheckInstance: c\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./types/checkbox.js\n **/","export default ngModule => {\n  require('./checkbox')(ngModule);\n  require('./multiCheckbox')(ngModule);\n  require('./input')(ngModule);\n  require('./radio')(ngModule);\n  require('./select')(ngModule);\n  require('./textarea')(ngModule);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./types/index.js\n **/","export default ngModule => {\n  ngModule.config(addInputType);\n\n  function addInputType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: 'input',\n      template: '<input class=\"form-control\" ng-model=\"model[options.key]\">',\n      wrapper: ['bootstrapLabel', 'bootstrapHasError']\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./types/input.js\n **/","export default ngModule => {\n  ngModule.config(addCheckboxType);\n\n  function addCheckboxType(formlyConfigProvider, formlyBootstrapApiCheck) {\n    const c = formlyBootstrapApiCheck;\n    formlyConfigProvider.setType({\n      name: 'multiCheckbox',\n      template: require('./multiCheckbox.html'),\n      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n      defaultOptions: {\n        noFormControl: false\n      },\n      apiCheck: {\n        templateOptions: c.shape({\n          options: c.arrayOf(c.object),\n          labelProp: c.string.optional,\n          valueProp: c.string.optional\n        })\n      },\n      apiCheckInstance: c,\n      controller: /* @ngInject */ function($scope) {\n        const to = $scope.to;\n        const opts = $scope.options;\n        $scope.multiCheckbox = {\n          checked: [],\n          change: setModel\n        };\n\n        // initialize the checkboxes check property\n        const modelValue = $scope.model[opts.key];\n        if (angular.isArray(modelValue)) {\n          const valueProp = to.valueProp || 'value';\n          angular.forEach(to.options, function(v, index) {\n            $scope.multiCheckbox.checked[index] = modelValue.indexOf(v[valueProp]) !== -1;\n          });\n        }\n\n        function setModel() {\n          $scope.model[opts.key] = [];\n          angular.forEach($scope.multiCheckbox.checked, (checkbox, index) => {\n            if (checkbox) {\n              $scope.model[opts.key].push(to.options[index][to.valueProp || 'value']);\n            }\n          });\n        }\n      }\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./types/multiCheckbox.js\n **/","export default ngModule => {\n  ngModule.config(addRadioType);\n\n  function addRadioType(formlyConfigProvider, formlyBootstrapApiCheck) {\n    const c = formlyBootstrapApiCheck;\n    formlyConfigProvider.setType({\n      name: 'radio',\n      template: require('./radio.html'),\n      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n      defaultOptions: {\n        noFormControl: false\n      },\n      apiCheck: {\n        templateOptions: c.shape({\n          options: c.arrayOf(c.object),\n          labelProp: c.string.optional,\n          valueProp: c.string.optional\n        })\n      },\n      apiCheckInstance: c\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./types/radio.js\n **/","export default  ngModule => {\n  ngModule.config(addSelectType);\n\n  function addSelectType(formlyConfigProvider, formlyBootstrapApiCheck) {\n    const c = formlyBootstrapApiCheck;\n    formlyConfigProvider.setType({\n      name: 'select',\n      template: require('./select.html'),\n      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n      defaultOptions(options) {\n        if (options.templateOptions.ngOptions) {\n          return {\n            ngModelAttrs: {\n              [options.templateOptions.ngOptions]: {\n                value: 'ng-options'\n              }\n            }\n          };\n        }\n      },\n      apiCheck: {\n        templateOptions: c.shape({\n          options: c.arrayOf(c.object),\n          labelProp: c.string.optional,\n          valueProp: c.string.optional,\n          groupProp: c.string.optional\n        })\n      },\n      apiCheckInstance: c\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./types/select.js\n **/","export default  ngModule => {\n  ngModule.config(addTextareaType);\n\n  function addTextareaType(formlyConfigProvider, formlyBootstrapApiCheck) {\n    const c = formlyBootstrapApiCheck;\n    formlyConfigProvider.setType({\n      name: 'textarea',\n      template: '<textarea class=\"form-control\" ng-model=\"model[options.key]\"></textarea>',\n      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n      defaultOptions: {\n        ngModelAttrs: {\n          rows: {attribute: 'rows'},\n          cols: {attribute: 'cols'}\n        }\n      },\n      apiCheck: {\n        templateOptions: c.shape({\n          rows: c.number.optional,\n          cols: c.number.optional\n        })\n      },\n      apiCheckInstance: c\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./types/textarea.js\n **/","export default ngModule => {\n  ngModule.config(addWrappers);\n\n  function addWrappers(formlyConfigProvider, formlyBootstrapApiCheck) {\n    const c = formlyBootstrapApiCheck;\n    formlyConfigProvider.setWrapper([\n      {\n        name: 'bootstrapLabel',\n        template: require('./label.html'),\n        apiCheck: {\n          templateOptions: c.shape({\n            label: c.string,\n            required: c.bool.optional\n          })\n        },\n        apiCheckInstance: c\n      },\n      {name: 'bootstrapHasError', template: require('./has-error.html')}\n    ]);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./wrappers/index.js\n **/","module.exports = \"<div ng-class=\\\"{'input-group': to.addonLeft || to.addonRight}\\\">\\n    <div class=\\\"input-group-addon\\\" ng-if=\\\"to.addonLeft\\\">\\n        <i class=\\\"{{to.addonLeft.class}}\\\" ng-if=\\\"to.addonLeft.class\\\"></i>\\n        <span ng-if=\\\"to.addonLeft.text\\\">{{to.addonLeft.text}}</span>\\n    </div>\\n    <formly-transclude></formly-transclude>\\n    <div class=\\\"input-group-addon\\\" ng-if=\\\"to.addonRight\\\">\\n        <i class=\\\"{{to.addonRight.class}}\\\" ng-if=\\\"to.addonRight.class\\\"></i>\\n        <span ng-if=\\\"to.addonRight.text\\\">{{to.addonRight.text}}</span>\\n    </div>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./run/addons.html\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"checkbox\\\">\\n\\t<label>\\n\\t\\t<input type=\\\"checkbox\\\"\\n           class=\\\"formly-field-checkbox\\\"\\n\\t\\t       ng-model=\\\"model[options.key]\\\">\\n\\t\\t{{to.label}}\\n\\t\\t{{to.required ? '*' : ''}}\\n\\t</label>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/checkbox.html\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"radio-group\\\">\\n  <div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"checkbox\\\">\\n    <label>\\n      <input type=\\\"checkbox\\\"\\n             id=\\\"{{id + '_'+ $index}}\\\"\\n             ng-model=\\\"multiCheckbox.checked[$index]\\\"\\n             ng-change=\\\"multiCheckbox.change()\\\">\\n      {{option[to.labelProp || 'name']}}\\n    </label>\\n  </div>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/multiCheckbox.html\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"radio-group\\\">\\n  <div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"radio\\\">\\n    <label>\\n      <input type=\\\"radio\\\"\\n             id=\\\"{{id + '_'+ $index}}\\\"\\n             tabindex=\\\"0\\\"\\n             ng-value=\\\"option[to.valueProp || 'value']\\\"\\n             ng-model=\\\"model[options.key]\\\">\\n      {{option[to.labelProp || 'name']}}\\n    </label>\\n  </div>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/radio.html\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = \"<select class=\\\"form-control\\\"\\n        ng-model=\\\"model[options.key]\\\"\\n        ng-options=\\\"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options\\\">\\n</select>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/select.html\n ** module id = 18\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"form-group\\\" ng-class=\\\"{'has-error': showError}\\\">\\n  <formly-transclude></formly-transclude>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wrappers/has-error.html\n ** module id = 19\n ** module chunks = 0\n **/","module.exports = \"<div>\\n  <label for=\\\"{{id}}\\\" class=\\\"control-label\\\">\\n    {{to.label}}\\n    {{to.required ? '*' : ''}}\\n  </label>\\n  <formly-transclude></formly-transclude>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wrappers/label.html\n ** module id = 20\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_21__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"apiCheck\",\"amd\":\"api-check\",\"commonjs2\":\"api-check\",\"commonjs\":\"api-check\"}\n ** module id = 22\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_23__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"ngFormly\",\"amd\":\"angular-formly\",\"commonjs2\":\"angular-formly\",\"commonjs\":\"angular-formly\"}\n ** module id = 23\n ** module chunks = 0\n **/"],"sourceRoot":""}